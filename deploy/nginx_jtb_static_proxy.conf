## Nginx site configuration for JTB
#
# This config serves static files directly from /home/ubuntu/app when present,
# and proxies API requests and WebSocket upgrades to the Node server running on
# 127.0.0.1:3000. Place this file on the server at
# /etc/nginx/sites-available/jtb (or copy it there) and enable with a symlink to
# /etc/nginx/sites-enabled/jtb. Then test with `sudo nginx -t` and restart nginx.

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    listen 80;
    server_name _; # replace with your domain when you have one

    # Root where your repo is cloned on the EC2 instance
    # Update this to match your clone path (you cloned to /home/ubuntu/jtb)
    root /home/ubuntu/jtb;
    index index.html;

    # Serve static files if they exist, otherwise pass to Node
    location / {
        try_files $uri $uri/ @node;
    }

    # API endpoint(s) - proxy to Node
    location /vehicle {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Fallback proxy for Node (handles WebSocket upgrades and any other dynamic routes)
    location @node {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 90;
        proxy_buffering off;
    }

    # Optional: increase client body size if uploads are expected
    client_max_body_size 10M;

    # Logs
    access_log /var/log/nginx/jtb_access.log;
    error_log  /var/log/nginx/jtb_error.log;
}
